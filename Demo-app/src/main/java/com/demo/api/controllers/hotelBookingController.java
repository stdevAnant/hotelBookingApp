package com.demo.api.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.demo.api.model.favModel;
import com.demo.api.repo.hotelRepository;

@RestController
@CrossOrigin(origins = "http://localhost:3000")
@RequestMapping(path="/fav")
public class hotelBookingController {
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
private hotelRepository hotelRepository;

	
	@CrossOrigin(origins = "http://localhost:3000")
	@GetMapping(path="/getFavs")
	public @ResponseBody List<favModel> getAllFavs(){
		return (List<favModel>) hotelRepository.findAll();
		
		
	}
	
	@PostMapping(path="/addFav") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam int user
			, @RequestParam int restaurant) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		favModel n = new favModel();
		n.setUser_id(1);
		n.setRest_id(restaurant);
		hotelRepository.save(n);
		return "Saved";
	}


}
